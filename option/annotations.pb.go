// Copyright (c) 2015, Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.0
// source: mo/option/annotations.proto

package option

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	status "github.com/xsuners/mo/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// WS
type WS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WS) Reset() {
	*x = WS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WS) ProtoMessage() {}

func (x *WS) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WS.ProtoReflect.Descriptor instead.
func (*WS) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{0}
}

// TCP
type TCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TCP) Reset() {
	*x = TCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP) ProtoMessage() {}

func (x *TCP) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP.ProtoReflect.Descriptor instead.
func (*TCP) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{1}
}

// HTTP
type HTTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *HTTP) Reset() {
	*x = HTTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTP) ProtoMessage() {}

func (x *HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTP.ProtoReflect.Descriptor instead.
func (*HTTP) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *HTTP) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTP) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// GRPC
type GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GRPC) Reset() {
	*x = GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPC) ProtoMessage() {}

func (x *GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPC.ProtoReflect.Descriptor instead.
func (*GRPC) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{3}
}

// NATS
type NATS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NATS) Reset() {
	*x = NATS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NATS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NATS) ProtoMessage() {}

func (x *NATS) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NATS.ProtoReflect.Descriptor instead.
func (*NATS) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{4}
}

// QUIC
type QUIC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QUIC) Reset() {
	*x = QUIC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mo_option_annotations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QUIC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QUIC) ProtoMessage() {}

func (x *QUIC) ProtoReflect() protoreflect.Message {
	mi := &file_mo_option_annotations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QUIC.ProtoReflect.Descriptor instead.
func (*QUIC) Descriptor() ([]byte, []int) {
	return file_mo_option_annotations_proto_rawDescGZIP(), []int{5}
}

var file_mo_option_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*WS)(nil),
		Field:         72295728,
		Name:          "mo.option.ws",
		Tag:           "bytes,72295728,opt,name=ws",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*TCP)(nil),
		Field:         72295729,
		Name:          "mo.option.tcp",
		Tag:           "bytes,72295729,opt,name=tcp",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*HTTP)(nil),
		Field:         72295730,
		Name:          "mo.option.http",
		Tag:           "bytes,72295730,opt,name=http",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*GRPC)(nil),
		Field:         72295731,
		Name:          "mo.option.grpc",
		Tag:           "bytes,72295731,opt,name=grpc",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*NATS)(nil),
		Field:         72295732,
		Name:          "mo.option.nats",
		Tag:           "bytes,72295732,opt,name=nats",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*QUIC)(nil),
		Field:         72295733,
		Name:          "mo.option.quic",
		Tag:           "bytes,72295733,opt,name=quic",
		Filename:      "mo/option/annotations.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: ([]*status.Status)(nil),
		Field:         72295734,
		Name:          "mo.option.status",
		Tag:           "bytes,72295734,rep,name=status",
		Filename:      "mo/option/annotations.proto",
	},
}

// Extension fields to descriptor.MethodOptions.
var (
	// optional mo.option.WS ws = 72295728;
	E_Ws = &file_mo_option_annotations_proto_extTypes[0]
	// optional mo.option.TCP tcp = 72295729;
	E_Tcp = &file_mo_option_annotations_proto_extTypes[1]
	// optional mo.option.HTTP http = 72295730;
	E_Http = &file_mo_option_annotations_proto_extTypes[2]
	// optional mo.option.GRPC grpc = 72295731;
	E_Grpc = &file_mo_option_annotations_proto_extTypes[3]
	// optional mo.option.NATS nats = 72295732;
	E_Nats = &file_mo_option_annotations_proto_extTypes[4]
	// optional mo.option.QUIC quic = 72295733;
	E_Quic = &file_mo_option_annotations_proto_extTypes[5]
	// repeated mo.status.Status status = 72295734;
	E_Status = &file_mo_option_annotations_proto_extTypes[6]
)

var File_mo_option_annotations_proto protoreflect.FileDescriptor

var file_mo_option_annotations_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x6f, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d,
	0x6f, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x6f, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x04, 0x0a, 0x02, 0x57, 0x53, 0x22, 0x05, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x22,
	0x30, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x06, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x41, 0x54,
	0x53, 0x22, 0x06, 0x0a, 0x04, 0x51, 0x55, 0x49, 0x43, 0x3a, 0x40, 0x0a, 0x02, 0x77, 0x73, 0x12,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb0, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x53, 0x52, 0x02, 0x77, 0x73, 0x3a, 0x43, 0x0a, 0x03, 0x74,
	0x63, 0x70, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xb1, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x43, 0x50, 0x52, 0x03, 0x74, 0x63, 0x70,
	0x3a, 0x46, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x46, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb3, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x3a, 0x46, 0x0a, 0x04, 0x6e, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb4, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x41,
	0x54, 0x53, 0x52, 0x04, 0x6e, 0x61, 0x74, 0x73, 0x3a, 0x46, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x63,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb5, 0xca, 0xbc, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x55, 0x49, 0x43, 0x52, 0x04, 0x71, 0x75, 0x69, 0x63,
	0x3a, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb6, 0xca, 0xbc, 0x22, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x26,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x79,
	0x61, 0x73, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3b,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mo_option_annotations_proto_rawDescOnce sync.Once
	file_mo_option_annotations_proto_rawDescData = file_mo_option_annotations_proto_rawDesc
)

func file_mo_option_annotations_proto_rawDescGZIP() []byte {
	file_mo_option_annotations_proto_rawDescOnce.Do(func() {
		file_mo_option_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_mo_option_annotations_proto_rawDescData)
	})
	return file_mo_option_annotations_proto_rawDescData
}

var file_mo_option_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mo_option_annotations_proto_goTypes = []interface{}{
	(*WS)(nil),                       // 0: mo.option.WS
	(*TCP)(nil),                      // 1: mo.option.TCP
	(*HTTP)(nil),                     // 2: mo.option.HTTP
	(*GRPC)(nil),                     // 3: mo.option.GRPC
	(*NATS)(nil),                     // 4: mo.option.NATS
	(*QUIC)(nil),                     // 5: mo.option.QUIC
	(*descriptor.MethodOptions)(nil), // 6: google.protobuf.MethodOptions
	(*status.Status)(nil),            // 7: mo.status.Status
}
var file_mo_option_annotations_proto_depIdxs = []int32{
	6,  // 0: mo.option.ws:extendee -> google.protobuf.MethodOptions
	6,  // 1: mo.option.tcp:extendee -> google.protobuf.MethodOptions
	6,  // 2: mo.option.http:extendee -> google.protobuf.MethodOptions
	6,  // 3: mo.option.grpc:extendee -> google.protobuf.MethodOptions
	6,  // 4: mo.option.nats:extendee -> google.protobuf.MethodOptions
	6,  // 5: mo.option.quic:extendee -> google.protobuf.MethodOptions
	6,  // 6: mo.option.status:extendee -> google.protobuf.MethodOptions
	0,  // 7: mo.option.ws:type_name -> mo.option.WS
	1,  // 8: mo.option.tcp:type_name -> mo.option.TCP
	2,  // 9: mo.option.http:type_name -> mo.option.HTTP
	3,  // 10: mo.option.grpc:type_name -> mo.option.GRPC
	4,  // 11: mo.option.nats:type_name -> mo.option.NATS
	5,  // 12: mo.option.quic:type_name -> mo.option.QUIC
	7,  // 13: mo.option.status:type_name -> mo.status.Status
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	7,  // [7:14] is the sub-list for extension type_name
	0,  // [0:7] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_mo_option_annotations_proto_init() }
func file_mo_option_annotations_proto_init() {
	if File_mo_option_annotations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mo_option_annotations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mo_option_annotations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mo_option_annotations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mo_option_annotations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mo_option_annotations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NATS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mo_option_annotations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QUIC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mo_option_annotations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 7,
			NumServices:   0,
		},
		GoTypes:           file_mo_option_annotations_proto_goTypes,
		DependencyIndexes: file_mo_option_annotations_proto_depIdxs,
		MessageInfos:      file_mo_option_annotations_proto_msgTypes,
		ExtensionInfos:    file_mo_option_annotations_proto_extTypes,
	}.Build()
	File_mo_option_annotations_proto = out.File
	file_mo_option_annotations_proto_rawDesc = nil
	file_mo_option_annotations_proto_goTypes = nil
	file_mo_option_annotations_proto_depIdxs = nil
}
