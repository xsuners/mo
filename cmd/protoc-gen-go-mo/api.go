/*
 *
 * Copyright 2020 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package main

import (
	"google.golang.org/protobuf/compiler/protogen"
)

const (
// contextPackage = protogen.GoImportPath("context")
// description    = protogen.GoImportPath("github.com/xsuners/mo/net/description")
// codesPackage   = protogen.GoImportPath("google.golang.org/grpc/codes")
// statusPackage  = protogen.GoImportPath("google.golang.org/grpc/status")
)

// generateApi generates a _mo.pb.go file containing gRPC service definitions.
func generateApi(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {
	if len(file.Services) == 0 {
		return nil
	}
	filename := file.GeneratedFilenamePrefix + "_api.pb.go"
	g := gen.NewGeneratedFile(filename, file.GoImportPath)
	g.P("// Code generated by protoc-gen-go-mo. DO NOT EDIT.")
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()
	return g
}
